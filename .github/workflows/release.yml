name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y pkg-config libavcodec-dev libavformat-dev libavutil-dev libavfilter-dev libavdevice-dev libswscale-dev libswresample-dev clang

      - name: Build release binary
        run: cargo build --release --locked

      - name: Strip binary
        run: strip target/release/terminal-media

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish --token ${CARGO_REGISTRY_TOKEN}

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          # Generate changelog from commit history
          if [ -z "$PREV_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" ${GITHUB_REF_NAME})
          else
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" ${PREV_TAG}..${GITHUB_REF_NAME})
          fi

          # Save to file for multiline handling
          echo "## Changelog" > changelog.md
          echo "" >> changelog.md
          echo "$CHANGELOG" >> changelog.md

          # Set output
          echo "changelog_file=changelog.md" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          body_path: ${{ steps.changelog.outputs.changelog_file }}
          files: |
            target/release/terminal-media
          token: ${{ secrets.GITHUB_TOKEN }}
